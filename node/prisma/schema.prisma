// @author DiZed Team
// @copyright Copyright (c) DiZed Team (https://github.com/di-zed/)

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  walletAddress String   @unique @map("wallet_address")
  lastLoginAt   DateTime @updatedAt @map("last_login_at")
  createdAt     DateTime @default(now()) @map("created_at")

  quizAnswers QuizAnswer[]
  quizRewards QuizReward[]

  @@map("users")
}

model QuizQuestion {
  id        Int      @id @default(autoincrement())
  quizId    Int      @map("quiz_id")
  question  String
  answer    String
  createdAt DateTime @default(now()) @map("created_at")

  options QuizQuestionOption[]
  answers QuizAnswer[]

  @@index([quizId])
  @@map("quiz_questions")
}

model QuizQuestionOption {
  id         Int      @id @default(autoincrement())
  questionId Int      @map("question_id")
  option     String
  createdAt  DateTime @default(now()) @map("created_at")

  question QuizQuestion @relation(fields: [questionId], references: [id])
  answers  QuizAnswer[]

  @@index([questionId])
  @@map("quiz_question_options")
}

model QuizAnswer {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  quizId     Int      @map("quiz_id")
  questionId Int      @map("question_id")
  optionId   Int      @map("option_id")
  isCorrect  Boolean  @map("is_correct")
  createdAt  DateTime @default(now()) @map("created_at")

  user     User               @relation(fields: [userId], references: [id])
  question QuizQuestion       @relation(fields: [questionId], references: [id])
  option   QuizQuestionOption @relation(fields: [optionId], references: [id])

  @@index([userId, quizId])
  @@map("quiz_answers")
}

model QuizReward {
  id             Int       @id @default(autoincrement())
  userId         Int       @map("user_id")
  quizId         Int       @map("quiz_id")
  totalQuestions Int       @map("total_questions")
  correctAnswers Int       @map("correct_answers")
  wrongAnswers   Int       @map("wrong_answers")
  earnedTokens   Int       @map("earned_tokens")
  isSent         Boolean   @map("is_sent")
  sentAt         DateTime? @map("sent_at")
  createdAt      DateTime  @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, quizId])
  @@map("quiz_rewards")
}

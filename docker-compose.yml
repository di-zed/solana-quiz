version: '3.9'

services:
  kafka1:
    container_name: kafka1-sq
    image: confluentinc/cp-kafka:8.0.1
    hostname: docker-kafka1
    ports:
      - "${KAFKA1_HOST_PORT}:${KAFKA1_CONTAINER_PORT}"
      - "${KAFKA1_HOST_PORT_EXT}:${KAFKA1_CONTAINER_PORT_EXT}"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      CLUSTER_ID: ${KAFKA1_CLUSTER_ID}
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka1:${KAFKA1_CONTAINER_PORT},CONTROLLER://kafka1:${KAFKA1_CONTAINER_PORT_EXT}'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka1:${KAFKA1_CONTAINER_PORT}'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:${KAFKA1_CONTAINER_PORT_EXT}'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - internal

  kafka-ui:
    container_name: kafka-ui-sq
    image: provectuslabs/kafka-ui:latest
    hostname: docker-kafka-ui
    ports:
      - "${KAFKA_UI_HOST_PORT}:${KAFKA_UI_CONTAINER_PORT}"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:${KAFKA1_CONTAINER_PORT}
    depends_on:
      - kafka1
    networks:
      - internal

  postgres:
    container_name: postgres-sq
    build:
      context: ./images/postgres
    hostname: docker-postgres
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./volumes/etc/inputrc:/etc/inputrc:cached # Autocomplete functionality to the Terminal
      - ./volumes/root/bash_history/postgres:/root/.bash_history:delegated
      - ./mounted:/home/mounted
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    working_dir: /home/mounted
    networks:
      - internal

  rust:
    container_name: rust-sq
    build:
      context: ./images/rust
    command: /bin/bash
    hostname: docker-rust
    ports:
      - "${RUST_HOST_PORT}:${RUST_CONTAINER_PORT}"
    tty: true
    stdin_open: true
    volumes:
      - ./rust:/home/app
      - ./.env:/home/app/.env
      - ./volumes/etc/inputrc:/etc/inputrc:cached # Autocomplete functionality to the Terminal
      - ./volumes/root/.cargo/registry:/root/.cargo/registry
      - ./volumes/root/bash_history/rust:/root/.bash_history:delegated
    working_dir: /home/app
    depends_on:
      - kafka1
      - postgres
    networks:
      - internal

  redis:
    container_name: redis-sq
    image: redis:7.4.5
    command: redis-server /usr/local/etc/redis/redis.conf
    hostname: docker-redis
    ports:
      - '${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}'
    volumes:
      - redis_data:/data
      - redis_run:/run
      - ./volumes/usr/local/etc/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - internal

  node:
    container_name: node-sq
    build:
      context: ./images/node
    command: npm run start:prod
    hostname: docker-node
    ports:
      - '${NODE_HOST_PORT}:${NODE_CONTAINER_PORT}'
    volumes:
      - ./node:/home/app
      - ./.env:/home/app/.env
      - ./volumes/etc/inputrc:/etc/inputrc:cached # Autocomplete functionality to the Terminal
      - ./volumes/root/bash_history/node:/root/.bash_history:delegated
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_CONTAINER_PORT}/${POSTGRES_DB}?schema=public"
    working_dir: /home/app
    depends_on:
      - kafka1
      - rust
      - redis
    networks:
      - internal

  front:
    container_name: front-sq
    build:
      context: ./images/front
    command: npm run start
    hostname: docker-front
    ports:
      - '${FRONT_HOST_PORT}:${FRONT_CONTAINER_PORT}'
    volumes:
      - ./front:/home/app
      - ./.env:/home/app/.env
      - ./volumes/etc/inputrc:/etc/inputrc:cached # Autocomplete functionality to the Terminal
      - ./volumes/root/bash_history/front:/root/.bash_history:delegated
    environment:
      PORT: ${FRONT_CONTAINER_PORT}
      NEXT_PUBLIC_NODE_URL: ${NODE_PUBLIC_URL}
    working_dir: /home/app
    depends_on:
      - node
    networks:
      - internal

volumes:
  kafka_data:

  postgres_data:

  redis_data:
  redis_run:

networks:
  internal:
    driver: bridge